name: "deployment"
on:
  push:
    branches:
      - master
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: "Get code"
        uses: actions/checkout@v3
      - name: "Setup node environment"
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache dependencies
        uses: actions/cache@v3
        with: 
          path:   ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run lint
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: "Get code"
        uses: actions/checkout@v3
      - name: "Setup node environment"
        uses: "actions/setup-node@v3"
        with:
          node-version: 18
      - name: Cache dependencies
        uses: actions/cache@v3
        with: 
          path:   ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test
  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    outputs: 
      script-file: ${{ steps.publish.outputs.script-file-name }}
    steps:
      - name: "Get code"
        uses: actions/checkout@v3
      - name: "Setup node environment"
        uses: "actions/setup-node@v3"
        with:
          node-version: 18
      - name: Cache dependencies
        uses: actions/cache@v3
        with: 
          path:   ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build code
        run: npm run build
      - name: Publish JS filename  #made up example to share outputs between jobs
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file-name={}' >> $GITHUB_OUTPUT ';'
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: |
            dist
            package.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build  artifacts
        uses: actions/download-artifact@v3
        with: 
          name: dist-files
      - name: Output contents
        run: ls
      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy code
        run: echo "Deploying.."
